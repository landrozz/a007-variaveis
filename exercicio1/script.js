// # ExercÃ­cio 1
// Construa um programa, seguindo os seguintes passos:

// **a)** Declare uma variÃ¡vel para armazenar um **nome**, sem atribuir um valor.

let nome

// **b)** Declare uma variÃ¡vel para armazenar uma **idade**, sem atribuir um valor.

let idade

// **c)** Imprima na tela o **tipo** dessas variÃ¡veis que acabou de criar, usando o comando `typeof`.

console.log(typeof nome, typeof idade)

// **d)** Reflita: por que esse tipo foi impresso? Escreva a resposta em um comentÃ¡rio de cÃ³digo.

//Resposta: Se nÃ£o houver uma atribuiÃ§Ã£o o programa nÃ£o consegue definir o tipo da variÃ¡vel entÃ£o ela Ã© identificada como "nÃ£o definida" (undefined)

// **e)** Depois, disso, atualize o cÃ³digo para **perguntar** ao usuÃ¡rio seu nome e sua idade, atribuindo esses dois valores Ã s variÃ¡veis que acabou de criar.

nome = prompt("Qual seu nome?")

idade = prompt("Qual sua idade?")
    
// >ğŸ’¡Se vocÃª receber um erro de cÃ³digo nessa etapa, reflita sobre o tipo de declaraÃ§Ã£o que utilizou.
    
// **f)** Novamente, imprima na tela o tipo dessas variÃ¡veis. O que vocÃª notou? Escreva em um comentÃ¡rio de cÃ³digo.

console.log(typeof nome, typeof idade)

//Resposta: O tipo da variÃ¡vel idade Ã© String e nÃ£o Number 

// **g)** Para finalizar, imprima na tela a mensagem: "OlÃ¡ `nome`,  vocÃª tem `idade` anos". Onde `nome` e `idade` sÃ£o os valores que o usuÃ¡rio inseriu

console.log(`"OlÃ¡ ${nome},  vocÃª tem ${idade} anos"`)

// >ğŸ’¡  Dica: para imprimir mais de um valor na mesma linha, vocÃª pode usar essa sintaxe:
// ```jsx
// console.log(valor1, valor2)